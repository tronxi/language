fmod EXPRESSION is 

    pr TYPE .

    sort Expression .
    subsort Type < Expression .

    op _sum_ : Expression Expression -> Expression [ctor assoc comm] .
    op _less_ : Expression Expression -> Expression [ctor] .
    op _mult_ : Expression Expression -> Expression [ctor assoc comm] .
    
    vars T T' : Type .
    var M : Memory .
    var Q : Qid .

    op eval : Expression Memory -> Type .
    eq eval (T sum T', M) = load(M,T) + load(M,T') .
    eq eval (T less T', M) = load(M,T) - load(M,T') .
    eq eval (T mult T', M) = load(M,T) * load(M,T') .
    eq eval (Q < T > < T' > , M) = load(M, toQid(Q, T, T', M)) .
    eq eval (T, M) = load(M, T) [owise] .

endfm